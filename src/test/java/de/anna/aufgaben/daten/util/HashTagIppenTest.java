package de.anna.aufgaben.daten.util;

import de.anna.aufgaben.HashTagIppen;
import org.junit.Assert;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

public class HashTagIppenTest {

    @Test
    public void shouldReturnSanitizedHashTag1() {

        HashMap<String, String> hashMap = new HashMap<>();
        hashMap.put("#tag, #one", "#tag,#one");
        hashMap.put("#tag,#one", "#tag,#one");
        hashMap.put("#tag, #one, #two, #three", "#tag,#one,#two,#three");
        hashMap.put("#tag,#one, #two,#three ", "#tag,#one,#two,#three");
        hashMap.put("#tag_one", "#tag_one");
        hashMap.put("#tag_one, #tag_two", "#tag_one,#tag_two");
        hashMap.put("#tag one", "#tag,#one");
        hashMap.put("#tag #one", "#tag,#one");
        hashMap.put("tag one", "#tag,#one");
        hashMap.put("tag_one", "#tag_one");
        hashMap.put("tag tag", "#tag");

        for (Map.Entry<String, String> entry : hashMap.entrySet()) {
            String inputHashTag = entry.getKey();
            String expected = entry.getValue();
            Assert.assertEquals(expected, HashTagIppen.sanitizeHashTagVonZoltan(inputHashTag));
        }
    }


    @Test
    public void shouldReturnSanitizedHashTag() {
        HashMap<String, String> hashMap = new HashMap<>();
        hashMap.put("#tag, #one", "#tag,#one");
        hashMap.put("#tag,#one", "#tag,#one");
        hashMap.put("#tag, #one, #two, #three", "#tag,#one,#two,#three");
        hashMap.put("#tag,#one, #two,#three ", "#tag,#one,#two,#three");
        hashMap.put("#tag_one", "#tag_one");
        hashMap.put("#tag_one, #tag_two", "#tag_one,#tag_two");
        hashMap.put("#tag one", "#tag,#one");
        hashMap.put("#tag #one", "#tag,#one");
        hashMap.put("tag one", "#tag,#one");
        hashMap.put("tag_one", "#tag_one");
        hashMap.put("tag tag", "#tag");

        for (Map.Entry<String, String> entry : hashMap.entrySet()) {
            String inputHashTag = entry.getKey();
            String expected = entry.getValue();
            Assert.assertEquals(expected, HashTagIppen.sanitizeHashTagVonAnna(inputHashTag));
        }
    }
}